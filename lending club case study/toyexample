from io import BytesIO
from pptx import Presentation

def read_pptx_from_bytes(pptx_bytes: bytes) -> Presentation:
    """
    Reads a .pptx file from byte data and returns a Presentation object.
    
    :param pptx_bytes: The .pptx file content in byte format
    :return: A python-pptx Presentation object
    """
    # Convert bytes to a file-like object using BytesIO
    pptx_file = BytesIO(pptx_bytes)
    
    # Load the presentation from the file-like object
    presentation = Presentation(pptx_file)
    
    return presentation

# Example usage:
# Assume pptx_bytes is already defined or obtained
# pptx_bytes = some_method_to_get_bytes()

presentation = read_pptx_from_bytes(pptx_bytes)

# You can now work with the 'presentation' object, for example:
for slide in presentation.slides:
    print(f"Slide {presentation.slides.index(slide) + 1}")
    for shape in slide.shapes:
        if hasattr(shape, "text"):
            print(f"Text: {shape.text}")
